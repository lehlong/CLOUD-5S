// <auto-generated />
using System;
using DMS.CORE;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DMS.CORE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240102034841_tbladAppversion_2")]
    partial class tbladAppversion_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DMS.CORE.Common.SQ._tblSequenceContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("_tblSequenceContract");
                });

            modelBuilder.Entity("DMS.CORE.Common.SQ._tblSequenceExport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("_tblSequenceExport");
                });

            modelBuilder.Entity("DMS.CORE.Common.SQ._tblSequenceImport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("_tblSequenceImport");
                });

            modelBuilder.Entity("DMS.CORE.Common.SQ._tblSequenceOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("_tblSequenceOrder");
                });

            modelBuilder.Entity("DMS.CORE.Common.SQ._tblSequenceOrderBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("_tblSequenceOrderBatch");
                });

            modelBuilder.Entity("DMS.CORE.Common.SQ._tblSequencePartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("_tblSequencePartner");
                });

            modelBuilder.Entity("DMS.CORE.Common.SQ._tblSequenceScale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("_tblSequenceScale");
                });

            modelBuilder.Entity("DMS.CORE.Common.SQ._tblSequenceStockExport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("_tblSequenceStockExport");
                });

            modelBuilder.Entity("DMS.CORE.Common.SQ._tblSequenceStockImport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("_tblSequenceStockImport");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccount", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("UserName");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("PositionCode");

                    b.ToTable("tblAdAccount");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblAdAccountGroup");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountGroupRight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RightId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RightId");

                    b.ToTable("tblAdAccountGroupRight");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountRefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccountUserName");

                    b.ToTable("tblAdAccountRefreshToken");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountRight", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RightId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdded")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("UserName", "RightId");

                    b.HasIndex("RightId");

                    b.ToTable("tblAdAccountRight");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccount_AccountGroup", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("UserName", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("tblAdAccount_AccountGroup");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdActionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblAdActionLog");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAppVersion", b =>
                {
                    b.Property<int>("VersionCode")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequiredUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VersionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VersionCode");

                    b.ToTable("tblAdAppVersion");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdLoginHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("MessageCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserAgent")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblAdLoginHistory");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("PId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblAdMenu");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdMessage", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("tblAdMessage");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdRight", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("PId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblAdRight");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdSystemParameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DefaultCompanyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultIngredientItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultIngredientStock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultProductItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultProductStock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DefaultTransferValue")
                        .HasColumnType("float");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PortAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PortLatitude")
                        .HasColumnType("float");

                    b.Property<double?>("PortLongitude")
                        .HasColumnType("float");

                    b.Property<string>("PortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblAdSystemParameter");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Extension")
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.ToTable("tblBuAttachment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuCheckInOut", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("RfId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehicleCode")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrderCode");

                    b.ToTable("tblBuCheckInOut");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("CreateBy");

                    b.HasIndex("PId");

                    b.ToTable("tblBuComment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuContract", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PartnerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("PartnerCode");

                    b.ToTable("tblBuContract");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuContractDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("OrderNumber")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("SumMoney")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasComputedColumnSql("OrderNumber*Price");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ContractCode");

                    b.HasIndex("ItemCode");

                    b.ToTable("tblBuContractDetail");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuCurrentCheckIn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RfId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehicleCode")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblBuCurrentCheckIn");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuFolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("ParentId");

                    b.ToTable("tblBuFolder");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuItemFormula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Admixture")
                        .HasColumnType("float");

                    b.Property<double?>("Cement")
                        .HasColumnType("float");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Sand")
                        .HasColumnType("float");

                    b.Property<double?>("Stone")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Water")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode")
                        .IsUnique()
                        .HasFilter("[ItemCode] IS NOT NULL");

                    b.ToTable("tblBuItemFormula");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuManufacture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("LatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PickUpMethod")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PourLineCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PourSectionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("PrevAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessType")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProcessWorkingShiftCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AreaCode");

                    b.HasIndex("ItemCode");

                    b.HasIndex("LatchId");

                    b.HasIndex("OrderCode");

                    b.HasIndex("PourLineCode");

                    b.HasIndex("PourSectionCode");

                    b.HasIndex("ProcessWorkingShiftCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblBuManufacture");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuManufactureChipper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ChipperCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ChipperCode");

                    b.HasIndex("ShiftCode");

                    b.ToTable("tblBuManufactureChipper");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuManufactureLatch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanReverse")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LatchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LatchShiftCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("LatchShiftCode");

                    b.ToTable("tblBuManufactureLatch");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuModuleAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.ToTable("tblBuModuleAttachment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuModuleComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleType")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CommentId")
                        .IsUnique();

                    b.ToTable("tblBuModuleComment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuMoisture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("DryWeight")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double?>("Moisture")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProcessBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("TrayDryWeight")
                        .HasColumnType("float");

                    b.Property<double?>("TrayWeight")
                        .HasColumnType("float");

                    b.Property<double?>("TrayWetWeight")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("WetWeight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OrderCode")
                        .IsUnique()
                        .HasFilter("[OrderCode] IS NOT NULL");

                    b.ToTable("tblBuMoisture");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Headings")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.ToTable("tblBuNotification");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuNotificationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSent")
                        .HasColumnType("bit");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("ReceiverName");

                    b.ToTable("tblBuNotificationDetail");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuOtp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEmailOTP")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPhoneNumberOTP")
                        .HasColumnType("bit");

                    b.Property<string>("Reception")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("tblBuOtp");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockExport", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExportDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExportDate7H")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShiftCode7H")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StockCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("AreaCode");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("CreateBy");

                    b.HasIndex("ItemCode");

                    b.HasIndex("OrderCode");

                    b.HasIndex("ShiftCode");

                    b.HasIndex("ShiftCode7H");

                    b.HasIndex("StockCode");

                    b.HasIndex("UnitCode");

                    b.HasIndex("UpdateBy");

                    b.ToTable("tblBuStockExport");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockExportDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExportCode")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLast")
                        .HasColumnType("bit");

                    b.Property<string>("PourLineCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PourSectionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("PrevAmount")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ExportCode");

                    b.HasIndex("PourLineCode");

                    b.HasIndex("PourSectionCode");

                    b.ToTable("tblBuStockExportDetail");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockImport", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ImportDate7H")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShiftCode7H")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StockCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("AreaCode");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("CreateBy");

                    b.HasIndex("ItemCode");

                    b.HasIndex("OrderCode");

                    b.HasIndex("ShiftCode");

                    b.HasIndex("ShiftCode7H");

                    b.HasIndex("StockCode");

                    b.HasIndex("UnitCode");

                    b.HasIndex("UpdateBy");

                    b.ToTable("tblBuStockImport");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockImportDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImportCode")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLast")
                        .HasColumnType("bit");

                    b.Property<string>("PourLineCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PourSectionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("ImportCode");

                    b.HasIndex("PourLineCode");

                    b.HasIndex("PourSectionCode");

                    b.ToTable("tblBuStockImportDetail");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StockCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("ItemCode");

                    b.HasIndex("StockCode");

                    b.ToTable("tblBuStockItem");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockItemDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PourLineCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PourSectionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StockCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AreaCode");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("ItemCode");

                    b.HasIndex("PourLineCode");

                    b.HasIndex("PourSectionCode");

                    b.HasIndex("StockCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblBuStockItemDetail");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockItemHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("ExportAmount")
                        .HasColumnType("float");

                    b.Property<double?>("ImportAmount")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("PrevAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ProcessDate7H")
                        .HasColumnType("date");

                    b.Property<string>("StockCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("WorkingShiftCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WorkingShiftCode7H")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("StockCode");

                    b.HasIndex("WorkingShiftCode");

                    b.HasIndex("WorkingShiftCode7H");

                    b.ToTable("tblBuStockItemHistory");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockItemTransferLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FromPourLineCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FromPourSectionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StockCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ToPourLineCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ToPourSectionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AreaCode");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("FromPourLineCode");

                    b.HasIndex("FromPourSectionCode");

                    b.HasIndex("ItemCode");

                    b.HasIndex("StockCode");

                    b.HasIndex("ToPourLineCode");

                    b.HasIndex("ToPourSectionCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblBuStockItemTransferLog");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuTracking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Heading")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("Datetime2");

                    b.Property<double?>("Speed")
                        .HasColumnType("float");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("Datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("OrderCode");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("OrderCode"), false);

                    b.ToTable("tblBuTracking");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuTrackingLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DriverUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("DriverUserName");

                    b.HasIndex("OrderCode");

                    b.ToTable("tblBuTrackingLog");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdArea", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdArea");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdBerth", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdBerth");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdChipper", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdChipper");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdCompany", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdCompany");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdCompanyInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblMdCompanyInfo");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDepartment", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("CompanyCode");

                    b.ToTable("tblMdDepartment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDevice", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DevicePort")
                        .HasColumnType("int");

                    b.Property<string>("GroupCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IpPort")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Code");

                    b.HasIndex("GroupCode");

                    b.HasIndex("TypeCode");

                    b.ToTable("tblMdDevice");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDeviceGroup", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdDeviceGroup");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDeviceType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdDeviceType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItem", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("CostPrice")
                        .HasColumnType("float");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManufacture")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("SellPrice")
                        .HasColumnType("float");

                    b.Property<string>("TypeCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("TypeCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblMdItem");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItemType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdItemType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdNotificationTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TemplateCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblMdNotificationTemplate");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPartner", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProvider")
                        .HasColumnType("bit");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdPartner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPosition", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdPosition");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPourLine", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SectionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("SectionCode");

                    b.ToTable("tblMdPourLine");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPourSection", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdPourSection");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdRfid", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehicleCode")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Code");

                    b.HasIndex("VehicleCode");

                    b.ToTable("tblMdRfid");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdShip", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Tonage")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdShip");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdStock", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("CompanyCode");

                    b.ToTable("tblMdStock");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdTransportAgency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdTransportAgency");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdUnit", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdUnit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicle", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DriverUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Tonnage")
                        .HasColumnType("float");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("UnladenWeight")
                        .HasColumnType("float");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("DriverUserName");

                    b.HasIndex("TypeCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblMdVehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicleType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdVehicleType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdWorkingShift", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("FromHour")
                        .HasColumnType("TIME");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ToHour")
                        .HasColumnType("TIME");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.ToTable("tblMdWorkingShift");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrder", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BerthCode")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CargoCompartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("GetOffTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("OrderBatchCode")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartnerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PurchasingMethod")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ScaleCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShipCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehicleCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WorkingShiftCode")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Code");

                    b.HasIndex("AreaCode");

                    b.HasIndex("BerthCode");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("CreateBy");

                    b.HasIndex("OrderBatchCode");

                    b.HasIndex("PartnerCode");

                    b.HasIndex("ScaleCode")
                        .IsUnique()
                        .HasFilter("[ScaleCode] IS NOT NULL");

                    b.HasIndex("ShipCode");

                    b.HasIndex("VehicleCode");

                    b.HasIndex("WorkingShiftCode");

                    b.ToTable("tblSoOrder");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderBatch", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompleteDeliveryNumber")
                        .HasColumnType("int");

                    b.Property<double>("CompleteNumber")
                        .HasColumnType("float");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomsDeclaration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveringNumber")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ExpectNumber")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartnerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PurchasingMethod")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<double>("ReleaseNumber")
                        .HasColumnType("float");

                    b.Property<string>("ShipCode")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Code");

                    b.HasIndex("CreateBy");

                    b.HasIndex("PartnerCode");

                    b.HasIndex("ShipCode");

                    b.ToTable("tblSoOrderBatch");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderBatchDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrderBatchCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double>("OrderNumber")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("ReleaseNumber")
                        .HasColumnType("float");

                    b.Property<double?>("SumMoney")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasComputedColumnSql("Price * OrderNumber");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("OrderBatchCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblSoOrderBatchDetail");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderBatchProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderBatchCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PrevState")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("OrderBatchCode");

                    b.ToTable("tblSoOrderBatchProcess");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderBatchVehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeliveryNumber")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderBatchCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehicleCode")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrderBatchCode");

                    b.HasIndex("VehicleCode");

                    b.ToTable("tblSoOrderBatchVehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double>("OrderNumber")
                        .HasColumnType("float");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("OrderCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblSoOrderDetail");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PrevState")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("OrderCode");

                    b.ToTable("tblSoOrderProcess");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoScale", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BillNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ConcurrencyToken")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InvoiceSymbol")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InvoiceTemplate")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PartnerCode")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ScaleTypeCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SyncCode")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TimeWeight1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeWeight2")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnitCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehicleCode")
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Weight")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasComputedColumnSql("Abs(Weight2 - Weight1)");

                    b.Property<double?>("Weight1")
                        .HasColumnType("float");

                    b.Property<double?>("Weight2")
                        .HasColumnType("float");

                    b.HasKey("Code");

                    b.HasIndex("AreaCode");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("ItemCode");

                    b.HasIndex("PartnerCode");

                    b.HasIndex("SyncCode")
                        .IsUnique()
                        .HasFilter("[SyncCode] IS NOT NULL");

                    b.HasIndex("UnitCode");

                    b.HasIndex("VehicleCode");

                    b.ToTable("tblSoScale");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoScaleImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ScaleCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("ScaleCode");

                    b.ToTable("tblSoScaleImage");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccount", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdDepartment", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPosition", "Position")
                        .WithMany()
                        .HasForeignKey("PositionCode");

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountGroupRight", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccountGroup", "AccountGroup")
                        .WithMany("ListAccountGroupRight")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.tblAdRight", "Right")
                        .WithMany("AccountGroupRights")
                        .HasForeignKey("RightId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AccountGroup");

                    b.Navigation("Right");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountRefreshToken", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Account")
                        .WithMany()
                        .HasForeignKey("AccountUserName");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountRight", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdRight", "Right")
                        .WithMany("AccountRights")
                        .HasForeignKey("RightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Account")
                        .WithMany("AccountRights")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Right");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccount_AccountGroup", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccountGroup", "AccountGroup")
                        .WithMany("Account_AccountGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Account")
                        .WithMany("Account_AccountGroups")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AccountGroup");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuAttachment", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Creator")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuCheckInOut", b =>
                {
                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany()
                        .HasForeignKey("OrderCode");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuComment", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.tblBuAttachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId");

                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Creator")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.BU.tblBuComment", "PComment")
                        .WithMany("Replies")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Attachment");

                    b.Navigation("Creator");

                    b.Navigation("PComment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuContract", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdPartner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerCode");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuContractDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.tblBuContract", "Contract")
                        .WithMany("Details")
                        .HasForeignKey("ContractCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode");

                    b.Navigation("Contract");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuFolder", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Creator")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.BU.tblBuFolder", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Creator");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuItemFormula", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithOne("ItemFormula")
                        .HasForeignKey("DMS.CORE.Entities.BU.tblBuItemFormula", "ItemCode");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuManufacture", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdArea", "Area")
                        .WithMany()
                        .HasForeignKey("AreaCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.BU.tblBuManufactureLatch", "Latch")
                        .WithMany("Manufactures")
                        .HasForeignKey("LatchId");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("Manufactures")
                        .HasForeignKey("OrderCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourLine", "PourLine")
                        .WithMany()
                        .HasForeignKey("PourLineCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourSection", "PourSection")
                        .WithMany()
                        .HasForeignKey("PourSectionCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "ProcessWorkingShift")
                        .WithMany()
                        .HasForeignKey("ProcessWorkingShiftCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode");

                    b.Navigation("Area");

                    b.Navigation("Item");

                    b.Navigation("Latch");

                    b.Navigation("Order");

                    b.Navigation("PourLine");

                    b.Navigation("PourSection");

                    b.Navigation("ProcessWorkingShift");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuManufactureChipper", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdChipper", "Chipper")
                        .WithMany()
                        .HasForeignKey("ChipperCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "WorkingShift")
                        .WithMany()
                        .HasForeignKey("ShiftCode");

                    b.Navigation("Chipper");

                    b.Navigation("WorkingShift");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuManufactureLatch", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "WorkingShift")
                        .WithMany()
                        .HasForeignKey("LatchShiftCode");

                    b.Navigation("WorkingShift");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuModuleAttachment", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.tblBuAttachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attachment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuModuleComment", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.tblBuComment", "Comment")
                        .WithOne("ModuleComment")
                        .HasForeignKey("DMS.CORE.Entities.BU.tblBuModuleComment", "CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuMoisture", b =>
                {
                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithOne("Moisture")
                        .HasForeignKey("DMS.CORE.Entities.BU.tblBuMoisture", "OrderCode");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuNotificationDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.tblBuNotification", "Notification")
                        .WithMany("Details")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Account")
                        .WithMany()
                        .HasForeignKey("ReceiverName");

                    b.Navigation("Account");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuOtp", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Account")
                        .WithMany()
                        .HasForeignKey("UserName");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockExport", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdArea", "Area")
                        .WithMany()
                        .HasForeignKey("AreaCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Creator")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("Exports")
                        .HasForeignKey("OrderCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "WorkingShift")
                        .WithMany()
                        .HasForeignKey("ShiftCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "WorkingShift7H")
                        .WithMany()
                        .HasForeignKey("ShiftCode7H");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdStock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode");

                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdateBy");

                    b.Navigation("Area");

                    b.Navigation("Company");

                    b.Navigation("Creator");

                    b.Navigation("Item");

                    b.Navigation("Order");

                    b.Navigation("Stock");

                    b.Navigation("Unit");

                    b.Navigation("Updater");

                    b.Navigation("WorkingShift");

                    b.Navigation("WorkingShift7H");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockExportDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.tblBuStockExport", "Export")
                        .WithMany("ExportDetails")
                        .HasForeignKey("ExportCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourLine", "PourLine")
                        .WithMany()
                        .HasForeignKey("PourLineCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourSection", "PourSection")
                        .WithMany()
                        .HasForeignKey("PourSectionCode");

                    b.Navigation("Export");

                    b.Navigation("PourLine");

                    b.Navigation("PourSection");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockImport", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdArea", "Area")
                        .WithMany()
                        .HasForeignKey("AreaCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Creator")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("Imports")
                        .HasForeignKey("OrderCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "WorkingShift")
                        .WithMany()
                        .HasForeignKey("ShiftCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "WorkingShift7H")
                        .WithMany()
                        .HasForeignKey("ShiftCode7H");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdStock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode");

                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdateBy");

                    b.Navigation("Area");

                    b.Navigation("Company");

                    b.Navigation("Creator");

                    b.Navigation("Item");

                    b.Navigation("Order");

                    b.Navigation("Stock");

                    b.Navigation("Unit");

                    b.Navigation("Updater");

                    b.Navigation("WorkingShift");

                    b.Navigation("WorkingShift7H");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockImportDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Account")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.BU.tblBuStockImport", "Import")
                        .WithMany("ImportDetails")
                        .HasForeignKey("ImportCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourLine", "PourLine")
                        .WithMany()
                        .HasForeignKey("PourLineCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourSection", "PourSection")
                        .WithMany()
                        .HasForeignKey("PourSectionCode");

                    b.Navigation("Account");

                    b.Navigation("Import");

                    b.Navigation("PourLine");

                    b.Navigation("PourSection");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockItem", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany("StockItems")
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdStock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockCode");

                    b.Navigation("Company");

                    b.Navigation("Item");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockItemDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdArea", "Area")
                        .WithMany()
                        .HasForeignKey("AreaCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourLine", "PourLine")
                        .WithMany()
                        .HasForeignKey("PourLineCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourSection", "PourSection")
                        .WithMany()
                        .HasForeignKey("PourSectionCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdStock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode");

                    b.Navigation("Area");

                    b.Navigation("Company");

                    b.Navigation("Item");

                    b.Navigation("PourLine");

                    b.Navigation("PourSection");

                    b.Navigation("Stock");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockItemHistory", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany("StockItemHistories")
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdStock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "WorkingShift")
                        .WithMany()
                        .HasForeignKey("WorkingShiftCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "WorkingShift7H")
                        .WithMany()
                        .HasForeignKey("WorkingShiftCode7H");

                    b.Navigation("Item");

                    b.Navigation("Stock");

                    b.Navigation("WorkingShift");

                    b.Navigation("WorkingShift7H");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockItemTransferLog", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdArea", "Area")
                        .WithMany()
                        .HasForeignKey("AreaCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourLine", "FromPourLine")
                        .WithMany()
                        .HasForeignKey("FromPourLineCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourSection", "FromPourSection")
                        .WithMany()
                        .HasForeignKey("FromPourSectionCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdStock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourLine", "ToPourLine")
                        .WithMany()
                        .HasForeignKey("ToPourLineCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourSection", "ToPourSection")
                        .WithMany()
                        .HasForeignKey("ToPourSectionCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode");

                    b.Navigation("Area");

                    b.Navigation("Company");

                    b.Navigation("FromPourLine");

                    b.Navigation("FromPourSection");

                    b.Navigation("Item");

                    b.Navigation("Stock");

                    b.Navigation("ToPourLine");

                    b.Navigation("ToPourSection");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuTracking", b =>
                {
                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("Trackings")
                        .HasForeignKey("OrderCode");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuTrackingLog", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverUserName");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany()
                        .HasForeignKey("OrderCode");

                    b.Navigation("Driver");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDepartment", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyCode");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDevice", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdDeviceGroup", "Group")
                        .WithMany("ListDevice")
                        .HasForeignKey("GroupCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdDeviceType", "Type")
                        .WithMany("ListDevice")
                        .HasForeignKey("TypeCode");

                    b.Navigation("Group");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItem", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdItemType", "ItemType")
                        .WithMany("ListItem")
                        .HasForeignKey("TypeCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany("ListItem")
                        .HasForeignKey("UnitCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ItemType");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPourLine", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdPourSection", "PourSection")
                        .WithMany("PourLines")
                        .HasForeignKey("SectionCode");

                    b.Navigation("PourSection");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdRfid", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdVehicle", "Vehicle")
                        .WithMany("Rfids")
                        .HasForeignKey("VehicleCode");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdStock", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicle", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "DefaultDriver")
                        .WithMany()
                        .HasForeignKey("DriverUserName");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdVehicleType", "VehicleType")
                        .WithMany("ListVehicle")
                        .HasForeignKey("TypeCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode");

                    b.Navigation("DefaultDriver");

                    b.Navigation("Unit");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrder", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdArea", "Area")
                        .WithMany()
                        .HasForeignKey("AreaCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdBerth", "Berth")
                        .WithMany()
                        .HasForeignKey("BerthCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Creator")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrderBatch", "OrderBatch")
                        .WithMany("Orders")
                        .HasForeignKey("OrderBatchCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPartner", "Partner")
                        .WithMany("Orders")
                        .HasForeignKey("PartnerCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.SO.tblSoScale", "Scale")
                        .WithOne("Order")
                        .HasForeignKey("DMS.CORE.Entities.SO.tblSoOrder", "ScaleCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdShip", "Ship")
                        .WithMany()
                        .HasForeignKey("ShipCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdVehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdWorkingShift", "WorkingShift")
                        .WithMany()
                        .HasForeignKey("WorkingShiftCode");

                    b.Navigation("Area");

                    b.Navigation("Berth");

                    b.Navigation("Company");

                    b.Navigation("Creator");

                    b.Navigation("OrderBatch");

                    b.Navigation("Partner");

                    b.Navigation("Scale");

                    b.Navigation("Ship");

                    b.Navigation("Vehicle");

                    b.Navigation("WorkingShift");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderBatch", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Creator")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPartner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdShip", "Ship")
                        .WithMany()
                        .HasForeignKey("ShipCode");

                    b.Navigation("Creator");

                    b.Navigation("Partner");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderBatchDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrderBatch", "OrderBatch")
                        .WithMany("OrderBatchDetails")
                        .HasForeignKey("OrderBatchCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode");

                    b.Navigation("Item");

                    b.Navigation("OrderBatch");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderBatchProcess", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Account")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrderBatch", "OrderBatch")
                        .WithMany("Processes")
                        .HasForeignKey("OrderBatchCode");

                    b.Navigation("Account");

                    b.Navigation("OrderBatch");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderBatchVehicle", b =>
                {
                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrderBatch", "OrderBatch")
                        .WithMany("Vehicles")
                        .HasForeignKey("OrderBatchCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdVehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleCode");

                    b.Navigation("OrderBatch");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode");

                    b.Navigation("Item");

                    b.Navigation("Order");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderProcess", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.tblAdAccount", "Account")
                        .WithMany("OrderProcesses")
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.SO.tblSoOrder", "Order")
                        .WithMany("OrderProcesses")
                        .HasForeignKey("OrderCode");

                    b.Navigation("Account");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoScale", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.tblMdArea", "Area")
                        .WithMany()
                        .HasForeignKey("AreaCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdItem", "Item")
                        .WithMany("Scales")
                        .HasForeignKey("ItemCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdPartner", "Partner")
                        .WithMany("Scales")
                        .HasForeignKey("PartnerCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode");

                    b.HasOne("DMS.CORE.Entities.MD.tblMdVehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleCode");

                    b.Navigation("Area");

                    b.Navigation("Company");

                    b.Navigation("Item");

                    b.Navigation("Partner");

                    b.Navigation("Unit");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoScaleImage", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.tblBuAttachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.SO.tblSoScale", "OrderScale")
                        .WithMany("Images")
                        .HasForeignKey("ScaleCode");

                    b.Navigation("Attachment");

                    b.Navigation("OrderScale");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccount", b =>
                {
                    b.Navigation("AccountRights");

                    b.Navigation("Account_AccountGroups");

                    b.Navigation("OrderProcesses");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdAccountGroup", b =>
                {
                    b.Navigation("Account_AccountGroups");

                    b.Navigation("ListAccountGroupRight");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.tblAdRight", b =>
                {
                    b.Navigation("AccountGroupRights");

                    b.Navigation("AccountRights");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuComment", b =>
                {
                    b.Navigation("ModuleComment");

                    b.Navigation("Replies");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuContract", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuFolder", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuManufactureLatch", b =>
                {
                    b.Navigation("Manufactures");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuNotification", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockExport", b =>
                {
                    b.Navigation("ExportDetails");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.tblBuStockImport", b =>
                {
                    b.Navigation("ImportDetails");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdCompany", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDeviceGroup", b =>
                {
                    b.Navigation("ListDevice");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdDeviceType", b =>
                {
                    b.Navigation("ListDevice");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItem", b =>
                {
                    b.Navigation("ItemFormula");

                    b.Navigation("OrderDetails");

                    b.Navigation("Scales");

                    b.Navigation("StockItemHistories");

                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdItemType", b =>
                {
                    b.Navigation("ListItem");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPartner", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Scales");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdPourSection", b =>
                {
                    b.Navigation("PourLines");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdUnit", b =>
                {
                    b.Navigation("ListItem");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicle", b =>
                {
                    b.Navigation("Rfids");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.tblMdVehicleType", b =>
                {
                    b.Navigation("ListVehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrder", b =>
                {
                    b.Navigation("Exports");

                    b.Navigation("Imports");

                    b.Navigation("Manufactures");

                    b.Navigation("Moisture");

                    b.Navigation("OrderDetails");

                    b.Navigation("OrderProcesses");

                    b.Navigation("Trackings");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoOrderBatch", b =>
                {
                    b.Navigation("OrderBatchDetails");

                    b.Navigation("Orders");

                    b.Navigation("Processes");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.tblSoScale", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
